package MainForm.Card;

import DataBaseControl.CardControl;
import MainForm.ActiveProfile;
import MainForm.ErrorMessageForm;
import MainForm.SuccessMessageForm;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class EditCardForm extends JFrame {
    private JTextField firstSideCardText;
    private JTextField secondSideCardText;
    private JTextField tagCardText;
    private JButton OKButton;
    private JButton cancelButton;
    private JPanel panel;

    Toolkit tk = Toolkit.getDefaultToolkit();
    Dimension screenSize = tk.getScreenSize();

    CardControl cardControl = new CardControl();
    private Card card;
    private Card newCard;

    public EditCardForm() {
        setContentPane(panel);
        setLocation(screenSize.width / 2 - 161, screenSize.height / 2 - 75);
        setVisible(true);
        this.OKButton.addActionListener(new OKButtonCreateListener());
        this.cancelButton.addActionListener(new cancelButtonListener());
    }

    public EditCardForm(Card card) {
        setCard(card);
        firstSideCardText.setText(card.getFirstSide());
        secondSideCardText.setText(card.getSecondSide());
        tagCardText.setText(card.getTag());
        setContentPane(panel);
        setLocation(screenSize.width / 2 - 161, screenSize.height / 2 - 75);
        setVisible(true);
        this.OKButton.addActionListener(new OKButtonEditListener());
        this.cancelButton.addActionListener(new cancelButtonListener());
    }

    private void setCard(Card card) {
        this.card = card;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(6, 2, new Insets(0, 0, 0, 0), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("Лицевая сторона карточки:");
        panel.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        firstSideCardText = new JTextField();
        firstSideCardText.setText("");
        panel.add(firstSideCardText, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Обратная сторона карточки:");
        panel.add(label2, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        secondSideCardText = new JTextField();
        panel.add(secondSideCardText, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Метка:");
        panel.add(label3, new com.intellij.uiDesigner.core.GridConstraints(4, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(83, 16), null, 0, false));
        tagCardText = new JTextField();
        panel.add(tagCardText, new com.intellij.uiDesigner.core.GridConstraints(4, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel.add(panel1, new com.intellij.uiDesigner.core.GridConstraints(5, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        OKButton = new JButton();
        OKButton.setText("OK");
        panel1.add(OKButton, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cancelButton = new JButton();
        cancelButton.setText("Отмена");
        panel1.add(cancelButton, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }

    public class OKButtonEditListener implements ActionListener {
        public void actionPerformed(ActionEvent actionEvent) {
            if (firstSideCardText.getText().isEmpty()) {
                ErrorMessageForm errorMessageForm = new ErrorMessageForm("Лицевая сторона карточки пустая");
                errorMessageForm.pack();
                return;
            }
            newCard = new Card(card.getId(), firstSideCardText.getText(), secondSideCardText.getText(), tagCardText.getText());
            cardControl.EditCard(newCard);
            if (cardControl.check()) {
                ErrorMessageForm errorMessageForm = new ErrorMessageForm("Карточка не исправлена");
                errorMessageForm.pack();
            } else {
                SuccessMessageForm success = new SuccessMessageForm("Карточка отредактирована");
                success.pack();
            }
            dispose();
        }
    }

    public class OKButtonCreateListener implements ActionListener {
        public void actionPerformed(ActionEvent actionEvent) {
            if (firstSideCardText.getText().isEmpty()) {
                ErrorMessageForm errorMessageForm = new ErrorMessageForm("Лицевая сторона карточки пустая");
                errorMessageForm.pack();
                return;
            }
            newCard = new Card(0, firstSideCardText.getText(), secondSideCardText.getText(), tagCardText.getText());
            cardControl.CreateCard(newCard);
            if (cardControl.check()) {
                ErrorMessageForm errorMessageForm = new ErrorMessageForm("Карточка не создана");
                errorMessageForm.pack();
            } else {
                SuccessMessageForm success = new SuccessMessageForm("Карточка создана");
                success.pack();
            }
            dispose();
        }
    }

    public class cancelButtonListener implements ActionListener {
        public void actionPerformed(ActionEvent actionEvent) {
            dispose();
        }
    }
}
